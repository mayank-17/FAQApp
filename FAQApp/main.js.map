{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-question/add-question.component.css","webpack:///./src/app/components/add-question/add-question.component.html","webpack:///./src/app/components/add-question/add-question.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/question-list/question-list.component.css","webpack:///./src/app/components/question-list/question-list.component.html","webpack:///./src/app/components/question-list/question-list.component.ts","webpack:///./src/app/components/question/question.component.css","webpack:///./src/app/components/question/question.component.html","webpack:///./src/app/components/question/question.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <app-question-list></app-question-list>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { QuestionListComponent } from './components/question-list/question-list.component';\nimport { DataService } from './services/data.service';\nimport { QuestionComponent } from './components/question/question.component';\nimport { AddQuestionComponent } from './components/add-question/add-question.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    QuestionListComponent,\n    QuestionComponent,\n    AddQuestionComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Add New FAQ\\n  </div>\\n  <div class=\\\"card-block\\\">\\n    <form (submit)=\\\"addQuestion()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"text\\\">Question</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"text\\\" name=\\\"text\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"text\\\">Answer</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"answer\\\" name=\\\"text\\\">\\n      </div>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Question } from '../../models/Question';\n\n@Component({\n  selector: 'app-add-question',\n  templateUrl: './add-question.component.html',\n  styleUrls: ['./add-question.component.css']\n})\nexport class AddQuestionComponent implements OnInit {\n\n  @Output() questionAdded = new EventEmitter<Question>();\n  text: string;\n  answer: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  addQuestion() {\n    this.questionAdded.emit({text: this.text, answer: this.answer, hide: true});\n    this.text = '';\n    this.answer = '';\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-toggleable-md navbar-inverse bg-inverse\\\">\\n  <div class=\\\"container\\\">\\n    <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\"\\n      aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">FAQ App</a>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n      </ul>\\n\\n    </div>\\n  </div>\\n\\n</nav>\\n<br><br>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-add-question (questionAdded)=\\\"addQuestion($event)\\\"></app-add-question>\\n<hr>\\n<app-question *ngFor=\\\"let question of questions\\\" [question] = \\\"question\\\">\\n\\n</app-question>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { Question } from '../../models/Question';\n\n@Component({\n  selector: 'app-question-list',\n  templateUrl: './question-list.component.html',\n  styleUrls: ['./question-list.component.css']\n})\nexport class QuestionListComponent implements OnInit {\n\n  questions: Question[];\n\n  constructor(public dataService: DataService) {\n\n  }\n\n  addQuestion(question: Question) {\n    this.dataService.addQuestion(question);\n  }\n\n  ngOnInit() {\n    this.questions = this.dataService.getQuestions();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"question\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      {{ question.text }}\\n      <a href=\\\"#\\\" class=\\\"btn btn-success\\\" (click)=\\\"question.hide = !question.hide\\\">\\n        Show\\n      </a> |\\n      <a href=\\\"#\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeQuestion(question)\\\">\\n        Delete\\n      </a>\\n    </div>\\n    <div class=\\\"card-block\\\" [hidden]=\\\"question.hide\\\">\\n      <p class=\\\"card-text\\\">\\n        {{ question.answer }}\\n      </p>\\n    </div>\\n  </div>\\n  <br>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Question } from '../../models/Question';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  @Input('question') question: Question;\n  constructor(public dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  removeQuestion(question: Question) {\n    this.dataService.removeQuestion(question);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Question } from '../models/Question';\n\n@Injectable()\nexport class DataService {\n  questions: Question[];\n\n  constructor() {\n    /*\n    this.questions = [\n      {\n        text:'What is your name?',\n        answer: 'My name is Brad',\n        hide: true\n      },\n      {\n        text:'What is your favorite color?',\n        answer: 'My favorite color is red',\n        hide:true\n      },\n      {\n        text:'What is your favorite language?',\n        answer: 'My favorite language is JavaScript',\n        hide:true\n      }\n    ];\n    */\n  }\n\n  // Get Questions from LS\n  getQuestions() {\n    if (localStorage.getItem('questions') === null) {\n      this.questions = [];\n    } else {\n      this.questions = JSON.parse(localStorage.getItem('questions'));\n    }\n    return this.questions;\n  }\n\n  // Add Question to LS\n  addQuestion(question: Question) {\n    this.questions.unshift(question);\n\n    // Init local var\n    let questions;\n\n    if (localStorage.getItem('questions') === null) {\n      questions = [];\n      // Push new question\n      questions.unshift(question);\n      // Set new array to LS\n      localStorage.setItem('questions', JSON.stringify(questions));\n    } else {\n      questions = JSON.parse(localStorage.getItem('questions'));\n      // Add new question\n      questions.unshift(question);\n      // Re set LS\n      localStorage.setItem('questions', JSON.stringify(questions));\n    }\n  }\n\n  // Remove Question from LS\n  removeQuestion(question: Question) {\n    for (let i = 0; i < this.questions.length; i++) {\n      if (question === this.questions[i]) {\n        this.questions.splice(i, 1);\n        localStorage.setItem('questions', JSON.stringify(this.questions));\n      }\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}